# Group Rules
Endpoints to manage rules, rule settings, preview running rules, run rules, and rule job statuses.

Rules allow bulk modification of campaign settings based on a filter and a condition.

Conditions specify how objects are selected for applying changes, and include a metric, operator, expected value, and a date range. These parameters are used when querying the reporting system and are applied using logical `AND`. This means the more conditions applied, the more narrow the matching criteria.

Filters enable matching only within certain networks, accounts, or individual campaigns. These parameters are also used when querying the reporting system and are applied using logical `OR`. This means you can request matching on several accounts for the same rule, or attempt matching for all accounts by default to keep the criteria as broad as possible.

:[](tables/Rule.apib)

:[](tables/RuleType.apib)

:[](tables/Condition.apib)
:[](tables/Filter.apib)
- Filters may specify a **source**, an **account_id**, and a **campaign_id**, or can be set to `null` indicating non-specific.
- For example, a filter can have **source** set to `outbrain`, **account_id** set to `3216`, and **campaign_id** set to `null` to ask for any campaign in the Outbrain account whose ID is `3216`.
- A filter can also have all optional values set to `null` to indicate "include all networks, accounts, and campaigns known to Brax".
- Or a filter may specify only **source** and leave the other two `null` to indicate only campaigns in the given network.
- If **campaign_id** is set, the other two must also be set, and likewise when **account_id** is set, **source** must also be set.


## Rules [/rules{?offset,limit}]

### List Rules [GET]
List all rules.

+ Parameters
    :[](params/pagination.apib)

+ Request (application/json)
    + Headers

            :[](headers/basic.apib)



+ Response 200 (application/json)

    + Headers

            :[](headers/ratelimit.apib)

    + Attributes
        + `results` (array[Rule])
        + `pagination` (Pagination)

    + Body

            :[](../json/rules.json)


## Get a Rule by ID [/rules/{rule_id}]
Show the configuration of a single rule by ID

+ Parameters
    + `rule_id` (ID, required)

### Rule by ID [GET]

+ Request (application/json)
    + Headers

            :[](headers/basic.apib)

+ Response 200 (application/json)
    + Attributes (Rule)

    + Body

            :[](../json/rules_by_id.json)


## Rules Preview By Rule Id [/rules/{rule_id}/preview]
Shows the potential result of running a rule, including the current rule settings, and the affected objects.

Rule previews have the following structure...
:[](tables/RulePreview.apib)
:[](tables/Match.apib)

Depending on how a rule is configured, there will be multiple object metrics shown in the response. The field names will contain spaces for these metrics.

+ Parameters
    + `rule_id` (ID, required)

### Preview running a rule [GET]

+ Request (application/json)
    + Headers

            :[](headers/basic.apib)

+ Response 200 (application/json)
    + Attributes (RulePreview)

    + Body

            :[](../json/rule_preview.json)


## Run a Rule by ID [/rules/{rule_id}/run]
A POST request send to this endpoint will enqueue the running of the specified rule with the default match items selected,
and return a response with the `job_id` of the job which can be queried via the status endpoint below.

+ Parameters
    + `rule_id` (ID, required)

### Run a rule [POST]

+ Request (application/json)
    + Headers

            :[](headers/basic.apib)

+ Response 200 (application/json)
    + Attributes (RuleRun)

    + Body

            :[](../json/rule_run.json)




## Rule History [/rules/jobs]

### Job history [GET]
Returns a list of jobs currently running or that have run in the past.

+ Request (application/json)
    + Headers

            :[](headers/basic.apib)

+ Response 200 (application/json)

    + Headers
    
            :[](headers/ratelimit.apib)

    + Attributes
        - `results` (array[RuleJob])
        - `pagination` (Pagination)

    + Body

            :[](../json/rule_jobs.json)


## Rules Job Status Job ID [/rules/jobs/{job_id}]
Returns the status details of a job for running a rule.

+ Parameters
    + `job_id` (ID, required)

### Job status by Job ID [GET]

+ Request (application/json)
    + Headers

            :[](headers/basic.apib)

+ Response 200 (application/json)
    + Attributes
        + `job` (RuleStatus) - running status of the job

    + Body

            :[](../json/rule_status.json)

